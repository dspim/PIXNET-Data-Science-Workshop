{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Quick R Introduction\"\nauthor: \"Johnson 與其他作者群 @PIXNET Workshop\"\ndate: ' 2017-06-03'\noutput:\n  ioslides_presentation:\n    css: css/dsp.css\n    widescreen: yes\n    self_contained: false\n---\n\n# Ch01：為何要學 R 語言？\n```{r setup, include=FALSE, cache=FALSE}\nlibrary(knitr)\nlibrary(magrittr)\nlibrary(xtable)\nlibrary(dplyr)\nlibrary(ggplot2)\nopts_chunk$set(echo = FALSE, cache=TRUE, comment=\"\", cache.path = \".cache-EDA/\")\nfig <- function(path, size = 100) {\n  sprintf(\"<img src='img/%s' style='max-width: %d%%;max-height: %d%%'></img>\", \n          path, size, size)\n}\nfig2 <- function(path, size = 100) {\n  sprintf(\"<img src='img/%s' style='width: %d%%'></img>\", \n          path, size)\n}\nsys_name <- Sys.info()[\"sysname\"] %>% tolower\nsys_encode <- c(\"utf8\", \"utf8\", \"big5\")[pmatch(sys_name, c(\"linux\", \"darwin\", \"windows\"))]\nsessionInfo() %>% capture.output %>% cat(file = \"sessionInfo.log\", sep = \"\\n\")\n```\n\n\n## R 是專門為資料分析而設計的程式語言 {.smaller .centered}\n<img src='img/statician_10521919-655x280.jpg' style='width: 960px'></img>\n<h3>R 可以執行大多數的統計計算、機器學習、資料採礦方法</h3>\n取自 <http://goo.gl/CkXlvY>\n\n## 免費、開源、豐沛的社群資源 {.smaller .columns-2 .centered}\n<img src='img/fig_8_cran.png' style='height: 400px'></img>\n<h3>很容易擴充和客製化</h3>\n取自 <http://goo.gl/AwfHLx>\n\n<img src='img/r-integration-1.png' style='height: 400px'></img>\n<h3>很容易和其他工具做整合</h3>\n取自 <http://goo.gl/jvNnG3>\n\n## R 可以輸出高品質的視覺化 {.smaller .centered}\n\n<img src='img/flights_sml.jpg' style='width: 960px'></img>\n\n取自 <http://goo.gl/q1NX26>\n\n\n## 課程目標\n\n<ul style=\"font-size: 120%\">\n<li>建立 R 的使用環境</li>\n<li>熟悉 R 語言基礎操作</li>\n<li>了解 R 語言的物件的結構</li>\n<li>體會 R 語言的流程控制</li>\n<li>學習 R 語言的資料整理</li>\n<li>確立 R 語言的資料爬析概念</li>\n</ul>\n\n# Ch02：建立 R 的使用環境\n\n## 傢俬準備好 {.columns-2}\n\n### 環境安裝\n- 主程式：[R](https://www.r-project.org/)（R-3.3.3 以上版本）\n- 編輯界面：[RStudio IDE](https://www.rstudio.com/products/rstudio/)（0.99.473 以上版本）\n- [疑難排解指南](https://github.com/dspim/R/wiki/R-&-RStudio-Troubleshooting-Guide)\n<br>\n<br>\n<br>\n\n\n### RStudio 界面說明\n- 程式碼編輯區\n- 命令列區\n- 環境資訊區\n- 檔案系統區\n\n\n## 熟悉 RStudio 的 **命令列** 界面  \n\n### 程式的**輸入**、**輸出**、**中斷**\n\n- 左下角的當符號 `>` 表示可以輸入指令\n- 輸入 `1 + 1` 後按下 **Enter**，檢查螢幕輸出\n- 輸入 `1 +  ` 後按下 **Enter**，檢查螢幕輸出 <br> 最左下角的開頭變成 `+` 表示尚未輸入完成，應繼續輸入\n- 按下 **ESC**，會中斷執行中的程式 (左下角回復成 `>` 開頭)\n\n\n## 熟悉 RStudio 的 **程式碼編輯** 界面\n### 停留時間最多的區域\n- **New File -> R Script -> Untiled1.R**\n- 在程式碼編輯區中輸入 `1 + 1` 後按下 **Control + Enter**，檢查 命令列區\n- 在程式碼編輯區中輸入 `1 + ` 後按下 **Control + Enter**，檢查 命令列區\n- 在命令列區按下 **ESC** 中斷程式\n\n# Ch03 今天學完，你一定會用R做資料整理\n\n## 先別想，複製貼上就是了\n\n```{r echo=TRUE}\ndat1 <- data.frame(date=c(\"11/29\",\"11/30\",\"12/01\",\"12/02\",\"12/03\",\"12/04\",\"12/05\"),\n                   weekday=c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"))\ndat1 # print R object\n```\n```{r echo=TRUE, eval=FALSE}\ndat1[1, 1]  # 取值\ndat1[, 1]   \ndat1[1:2,] \n```\n\n## 先別想，複製貼上就是了\n\n```{r echo=TRUE}\ndat2 <- data.frame(date=c(\"11/29\",\"11/30\",\"12/01\",\"12/02\",\"12/03\",\"12/04\",\"12/05\"),\n                   temp=c(17, 18, 24, 20, 21, 22, 24))\ndat2 # print R object\n```\n\n```{r echo=TRUE, eval=FALSE}\ndat2[, 2]\ndat2[, 2] * 2   \ndat2[, 2] + c(1, 0, -0.5, 2, 3, -2, 0.5) \n```\n\n## 先別想，複製貼上就是了\n```{r echo=TRUE}\ndat2[dat2$temp<20,]\ndat2[grepl(\"11\", dat2$date), ]\ncbind(dat1,temp=dat2$temp)[dat2$temp<20,]\n```\n\n\n# Ch04：基礎教學 - 敘述句與數列\n\n## 敘述句 {.columns-2}\n\n```{r echo=TRUE}\n1\n2\n1; 2\n``` \n<br>\n<p>\n<br>\n<p>\n<p>\n\n### 筆記\n- 灰底的區塊為程式碼 (輸入)，[1] 為運算結果 (輸出)\n- 敘述句以**斷行 (Enter)** 或**分號 ( ; )** 作結尾\n- 未完成的敘述句，命令列開頭會變成 `+`\n- 可以用 **Esc** 中斷敘述句\n- R 會把單引號 `'apple'` 或雙引號 `\"book\"` 所包覆的敘述當成字串\n\n## 敘述句2 {.columns-2}\n\n```{r echo=TRUE}\n# 基礎運算\n1 + 2 + 3\n1 +       2 + 3\nx <- 10\ny <- 4\n(x + y) / 2 # 簡單的公式運算\n```\n<br>\n<p>\n<p>\n<br>\n\n### 筆記\n- 基本數學運算符號 (`+`, `-`, `*`, `/`, ...)\n- 空白 (**space**) 不影響程式執行\n- 箭號 (`<-`) 表示賦值，把箭號右邊的結果指向到R物件\n- 井號 (**#**) 表示註解，使得該行不執行運算\n- 在RStudio中，想要一次註解多行可用 **ctrl + shift + c**\n- 在命令列中按 **ctrl + l** 可以清除當前畫面\n\n## 最基礎的物件：數值型向量 (數列) {.columns-2}\n```{r echo=TRUE}\n# basic expression of integer vector\nc(1, 2, 3, 4)\n\n# simple expression\n1:4\n4:1\n```\n<br>\n<p>\n<p>\n### 筆記\n- 以 `c(...)` 表示 (c 取自combine之意), 整個函數內容以 `() `包括起來，元素以逗號分隔。\n- 連續整數向量可以利用 `:` (冒號) 簡記，譬如數列 (1, 2, 3, 4) 在 R 語言中可利用 `1:4` 簡記\n- 也可以使用 `4:1` 的簡記方式來產生 (4, 3, 2, 1) 的向量\n\n## 如何生成有序的數值向量 {.columns-2}\n```{r echo=TRUE}\nseq(1, 4)\nseq(1, 9, by = 2) # 間隔為2\nseq(1, 9, length.out = 5) # 分割長度為5\n```\n\n<p>\n<p>\n<p>\n<p>\n<p>\n<br>\n<p>\n\n### 筆記\n- 除了冒號簡記法外，可以透過`seq`函數生成有規則的數值向量(序列)  \n- 在`seq()` 函數中按 **tab** 鍵觀察有哪些參數可以使用\n- `by` 表示數列間隔，預設為1\n- `length.out` 表示數列長度\n\n\n## 小挑戰\n- 利用簡記法列出 1 ~ 10的數列\n- 利用 `seq` 函數列出偶數數列: 2, 4, 6, 8, 10\n- 觀察 `seq(1, 10, length.out=5)` 的輸出結果\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n\n##\n參考解答\n```{r echo=TRUE}\n1:10\nseq(2, 10, by = 2)\nseq(2, 10, length.out = 5)\nseq(1, 10, length.out=5)\n```\n</div>\n\n\n# Ch05：基礎教學 - 數列的運算\n## 數列的運算 {.columns-2}\nR的數列運算滿足 **recycling properties**\n```{r echo=TRUE}\nc(1, 2, 3) * c(2, 2, 2)\n# shorter arguments are recycled\n1:3 * 2\nc(0.5, 1.5, 2.5, 3.5) * c(2, 1)\n```\n\n<p>\n<p>\n<p>\n<p>\n<p>\n\n### 小挑戰\n向量的四則運算，請計算以下五位女藝人的BMI\n\nHint: BMI = 體重 / (身高/100)^2\n```{r echo=TRUE, eval=FALSE}\nheight <- c(174, 158, 160, 168, 173)\nweight <- c(52, 39, 42, 46, 48)\n```\n\n<div class=\"notes\">\n```{r echo=TRUE, eval=TRUE}\nheight <- c(174, 158, 160, 168, 173)\nweight <- c(52, 39, 42, 46, 48)\nweight/ (height/100)^2\n```\n</div>\n\n## 向量的取值 {.columns-2}\n\n- 在`[ ]` (中括號) 中輸入元素的位置進行取值\n- 使負號 (`-`) 移除給定位置元素 (反向選取)\n\n```{r echo=TRUE}\nx <- c(174, 158, 160, 168, 173)\nx[1]           # 選取第1個位置的元素\nx[c(1, 3)]     # 選取第1, 3個位置的元素\nx[c(2, 3, 1)]  # 依序取值\n\n# 在[ ]中使用負號 (-) 做反向選取\nx[-1]\nx[-c(1, 3, 4)]\n```\n\n## 向量的取值2  {.columns-2}\n給定條件進行取值\n\n- 比較運算子(`>`, `<`, `>=`, `<=`, `==`, `!=`)\n- 邏輯運算子 (`&`, `|`)\n\n```{r echo=TRUE}\nx > 160\n\n# 使用比較運算子 加上 `which` 函數進行取值\nindex <- which(x > 160) \nindex \nx[index]\n\n# 指令壓縮，將指令寫在 [ ] 中，以達到縮短程式碼的功效\nx[which(x > 160)]\n\n# 配合邏輯算子進行多條件的取值\nx[which(x > 160 & x < 175)]\n\n# 可以省略 which\nx[x > 160 & x < 175]\n```\n\n\n## 向量的取代 {.columns-2}\n- 利用 `[ ]` (中括號) 與 `<-` (箭號) 進行取代與新增元素\n```{r echo=TRUE}\nx <- c(174, 158, 160, 168, 173)\n\n# 取代特定位置的元素\nx[2] <- 158.5 # 取代x物件的第二個元素\nx\nx[c(1, 5)] <- 175 \nx\n```\n<p>\n```{r echo=TRUE}\n# 也可以用條件篩選做取代\nx[x > 160] <- 170 # 取代大於160的值為170\nx\n```\n\n## 向量新增 {.columns-2}\n\n- 可用 `[ ]` (中括號) 與 `<-` (箭號) 進行新增元素  \n- `NA` 為系統保留字，表示Not Available / Missing Values  \n\n```{r echo=TRUE}\nx <- c(174, 158, 160, 168, 173)\n# 在 [ ] 中新增元素\nx[6] <- 168\nx\nx[8] <- 147\nx # 未指定的元素值預設為NA\nlength(x) # 查看向量物件的長度\nx[length(x) + 1] <- 166 # 接續增加新元素\n```\n\n\n# Ch06：查詢說明檔\n## 在 R 中查詢說明文件 {.columns-2}\n\n各種自救措施\n```{r echo=TRUE, eval=FALSE}\nhelp.start()\nab # 輸入`ab`後 按下tab\n?abs   # 等同於 help(abs)\n??abs \nvignette()\nvignette(\"Introduction\", \"Matrix\")\n```\n<br>\n<br>\n<p>\n<br>\n<br>\n<br>\n<br>\n<p>\n<p>\n\n### 筆記\n\n- help.start: 說明檔首頁\n- 自動完成 (tab鍵)：列出所有`ab`開頭的函數\n- ? (一個問號)：查詢特定函數的說明檔\n- ?? (兩個問號)：查詢包含特定關鍵字的說明檔\n- apropos : 查詢包含特定關鍵字的函數\n- example : 執行特定函數的使用範例\n- vignette : 查詢R環境中各種介紹文件\n\n# Ch07：資料測量的尺度\n\n## R 的資料形態分類\n\n```{r results='asis'}\nknitr::kable(data.frame(\"資料衡量尺度\"=c(\"連續資料\",\"比例資料\",\"區間資料\",\"順序資料\",\"名目資料\",\"布林資料\",\"文字資料\"),\n           \"R變數形態\"=c(\"numeric\",\"numeric\",\"numeric\",\"factor\",\"factor\",\"logical\",\"character\"),\n           \"特性\"=c(\"數值\",\"比值\",\"大小距離\",\"優先順序\",\"類別\",\"邏輯值\",\"文字\"),\n           \"範例\"=c(\"身高\",\"流失率\",\"溫度\",\"名次\",\"國家\",\"性別\",\"電話號碼\")))\n```\n\n\n## 判斷 Logical \n\n產生自比較，或是使用`T`、`TRUE`、`F`或`FALSE`輸入\n```{r  echo=TRUE}\nx <- 1 # 賦值\nx < 2\nx <= 1\n```\n\n## 字串 (Character) {.columns-2}\n\n- 輸入的時候利用`\"`或`'`來包覆要輸入的文字\n- 常用的Character處理函數 \n\n字串的剪接：`paste`\n```{r echo=TRUE}\nx <- \"bubble\"\ny <- \"bobble\"\npaste(x, y, sep=\",\")\n```\n\n字串的切割：`strsplit`\n```{r echo=TRUE}\nstrsplit(x, \"b\")\n```\n\n截取子字串：`substring`\n```{r echo=TRUE}\nname1<-\"郭雪芙\"\nsubstring(name1, 1, 1)\n```\n\n計算字串長度：`nchar`\n```{r echo=TRUE}\nnchar(name1) # 試著與 length 函數比較\n```\n\n## 小挑戰 \n- 取出金城武的姓\n- 取出字串 `a <- \"2015-12-14\"` 的月份\n\n## 解答\n\n```{r echo=TRUE}\n# 取出金城武的\nname2<-\"金城武\"\nsubstring(name2, 1, 2)\n\n# 取出字串 \"2015-12-14\" 的月份\na <- \"2015-12-14\"\nsubstring(a, 6, 7)\n\ntmp <- strsplit(a, \"-\")\ntmp[[1]][2]\n```\n\n\n## Factor (類別) {.columns-2}\n\n如何處理名目變數?\n```{r  echo=TRUE}\nx <- c(\"F\",\"M\",\"F\",\"F\")\nx\nx <- factor(c(\"F\",\"M\",\"F\",\"F\"), levels=c(\"F\",\"M\"))\nx\nx <- factor(c(\"F\",\"M\",\"F\",\"F\"), levels=c(\"F\"))\nlevels(x)\nas.integer(x)\n```\n\n## 如何處理順序資料?\n\n```{r  echo=TRUE}\n#農業社會 男尊女卑\nArgri <- factor(c(\"F\",\"M\",\"F\",\"F\"), order=TRUE, levels=c(\"F\",\"M\"))\n\n#阿美族 女尊男卑\nAmis <- factor(c(\"F\",\"M\",\"F\",\"F\"), order=FALSE, levels=c(\"F\",\"M\"))\n\n#應該要用\nAmis <- factor(c(\"F\",\"M\",\"F\",\"F\"), order=TRUE, levels=c(\"M\",\"F\"))\n```\n\n## 換個例子\n\n```{r echo=TRUE}\n#舉一個認真的例子 - 班上一號到六號分別拿到A, B, C的級別\nrank=factor(c(\"C\",\"A\",\"B\",\"B\",\"C\",\"C\"), order=TRUE, level=c(\"C\",\"B\",\"A\"))\nrank\nrank[1] < rank[2]\n\n```\n\n# Ch08: 資料型態的轉換\n\n## 向量有同質性 Vector \n\nCharacter > Numeric > Integer > Logical\n```{r echo=TRUE}\nx <- c(1, 2.0, \"3\")\nx\n```\n\n## 資料型態的轉換 {.columns-2}\n\n- 利用以下函數自行轉換向量型態： `as.character`, `as.numeric`, `as.logical`。\n\n```{r echo=TRUE}\nas.numeric(\"2\")\nx <- c(1, 2.0, \"3\")\nas.numeric(x)\n\ny <- c(\"1\", \"2\", \"3\", \"2\", \"a\")\nas.numeric(y)\n```\n\n- `NA`代表Not available，代表著**missing value**\n\n\n## 資料型態的轉換2 {.columns-2}\n\n```{r echo=TRUE, eval=TRUE}\n# 字串轉數字\na1 <- c(\"89\", \"91\", \"102\")\nas.numeric(a1)\n\n# 布林轉數字\na2 <- c(TRUE, TRUE, FALSE)\nas.numeric(a2)\n```\n```{r echo=TRUE, eval=TRUE}\n# 數字轉布林\na3 <- c(-2, -1, 0, 1, 2) # 只有0會被轉成FALSE\nas.logical(a3)\n\n# 數字轉字串\nas.character(a3)\n```\n\n```{r as.character, echo = TRUE}\nz <- c(1, 2, 3, 2, 3, 2, 1)\nas.character(z) # 字串\nfactor(z) # 轉類別\n```\n\n# Ch09: List 存放異質性資料的容器\n\n## List \n```{r echo=TRUE, eval=T}\nx1 <- c(\"林志玲\", 174, 52, TRUE)   # 所有元素都被轉換成字串\nx1\nx2 <- list(\"林志玲\", 174, 52, TRUE) # 保留資料型態\nstr(x2)\n```\n\n## List 賦值/取值 {.columns-2}\n```{r echo=TRUE}\nx3 <- list(name=c(\"林志玲\", \"隋棠\", \"蔡依林\"), \n           height=c(174, 173, 158),\n           weight=c(52, 48, 39),\n           model=c(TRUE, TRUE, FALSE))\n\nx3[[1]]\nx3$name\nx3[[\"name\"]]\nnames(x3)\n# names(x3) <- c(\"Name\", \"Height\", \"Weight\", \"Model\")\n```\n\n# Ch10：DataFrame 資料表\n\n## 資料表 `data.frame`\n\n- `data.frame` 是資料分析時最基本的物件\n- `R` 提供將外部資料轉成 `data.frame` 的功能\n- 透過`data.frame` 可以進行以下功能：\n    - 資料的整理\n    - 圖形的繪製\n    - 模型的配適與預測\n\n\n## 世界上最常見的範例資料 `iris`  \n```{r echo=TRUE, eval=T}\ndata(\"iris\")\nhead(iris) # 列出前幾筆資料, 預設6筆\ndim(iris)  # 列出資料表的 rows and columns\n```\n\n## 表格的取值 - 座標\n- 類似於向量取值，在中括號 `[i, j]` 中進行取值\n- 逗號的前後分別表示資料表的 row and column\n```{r echo=TRUE}\niris[2, 3]\niris[1:6, 1:3]\n```\n\n## 表格的取值 - 列\n欲選取第i筆觀察資料時，使用 `[i, ]` 在column欄位留白\n```{r echo=TRUE}\niris[2, ]\niris[c(1, 51, 101),]\n```\n\n## 表格的取值 - 欄\n欲選取整欄資料時，有三種常用方法\n```{r echo=TRUE, eval=FALSE}\niris[,1] # 欄位名稱未知\niris$Sepal.Length # 已知欄位名稱\niris[[\"Sepal.Length\"]] # 已知欄位名稱 \n```\n```{r}\niris[[\"Sepal.Length\"]]\n```\n\n## 表格的取值 - 篩選\n利用條件式做篩選\n```{r echo=TRUE}\niris[iris$Sepal.Length > 5.5 & iris$Species==\"setosa\", ]\n```\n\n# Ch11: Pattern Matching and Replacement\n\n## 關鍵字的取代與查找 - `gsub`\n`gsub(pattern, replacement, x)`\n```{r echo=TRUE}\nyear <- c(\"民國99\", \"民國100\", \"民國101\")\ngsub(\"民國\", \"\", year)\nas.numeric(gsub(\"民國\", \"\", year)) + 1911\n```\n\n## 關鍵字的取代與查找 - `grep`\n- `grep(pattern, x, value=FALSE)`\n- `grepl(pattern, x)`\n- `grep(pattern, x, value=TRUE)`\n\n```{r echo=TRUE}\ntitle <- c(\"馬習會前交涉祕辛曝光\", \"馬說明馬習會：公布逐字稿不可思議的透明\", \"談22K政策朱立倫：不幸被企業濫用\")\ngrep(\"馬習會\", title)\ngrepl(\"馬習會\", title)\ngrep(\"馬習會\", title, value = TRUE)\n```\n\n## 關鍵字的取代與查找 - `gregexpr`\n```{r echo=TRUE}\ntxt <- c(\"名模林志玲身高有174公分，體重52公斤\", \"女神蔡依林身高158公分，體重只有39公斤\")\nmatches <- gregexpr(\"[0-9]+\", txt)\nregmatches(txt, matches)\n```\n\n\n## Recape\n- 取代：`gsub`\n- 查找位置：`grep(value=FALSE)`, `grep(value=TRUE)`, `grepl`\n- 查找結果：`grepexpr`\n\n\n## 補充資料\n- [Learn R in R (Swirls)](https://github.com/wush978/DataScienceAndR)\n- [Text Processing (wikibooks)](https://en.wikibooks.org/wiki/R_Programming/Text_Processing)\n- [Introduction to R (around 4 hours)](https://www.datacamp.com/courses/free-introduction-to-r)\n- [Cookbook for R](http://www.cookbook-r.com/)\n\n## 繼續學習之路\n- 了解自己的需求，詢問關鍵字與函數\n- [Taiwan R User Group](http://www.meetup.com/Taiwan-R)，mailing list: Taiwan-useR-Group-list@meetup.com\n- [ptt R_Language版](https://www.ptt.cc/bbs/R_Language/index.html)\n- [R軟體使用者論壇](https://groups.google.com/forum/#!forum/taiwanruser)\n- [StackOverflow](http://stackoverflow.com/) \n- 歡迎來信 johnson@dsp.im 或其他DSP優秀教師多多交流\n\n## 安裝翻轉教室\n\n- 用`sessionInfo()`確定R 的版本\n- 重開R\n- 執行`source(\"http://wush978.github.io/R/init-swirl.R\")` 或 `source(\"http://13.85.30.195/R/init-swirl.R\")`\n- 下頁續...\n\n## 安裝翻轉教室\n\n```r\nDo you want to set the language to Chinese traditional?(y/n)y\nThis is the suggested command: `Sys.setlocale(locale = \"en_US.UTF-8\")`\nIt is recommended to adjust the locale for beginners.\nIf you cannot see any chinese, please visit <https://gitter.im/wush978/DataScienceAndR>.\nDo you want me to adjust the locale for you? (y/n)y\n\n| 嗨! 我看到你有很多變數儲存在你的 workspace。 為了能夠順利進行，我建議你在開始swirl前清空workspace 。\n\n| 輸入 ls() 檢視你的workspace儲存的變數列表。 然後, 輸入 rm(list=ls()) 以清空你的workspace。\n\n| 當你準備好開始的時候，輸入 swirl()。\n\n  |====================================================================================================================================| 100%\n> \n```\n\n## 開啟翻轉教室\n\n```r\n# library(swirl) 這次不用，但是之後重開R 後就需要\nswirl()\n# 選擇登入的服務\n# 1. Google\n# 2. Facebook\n# 3. Classroom\n```\n- 一般使用者，請使用 Google 或 Facebook 進行登入\n- 企業內訓的員工，請洽課程講師詢問授權帳號與密碼\n\n## 介紹訊息\n\n```txt\n| 謝謝， wush. 再開始我們第一節課前，我們先瞭解一些基本的實用項目。 第一關,\n| 當您看到 '...', 代表當您結束閱讀並準備繼續時，請按下Enter鍵。\n\n...  <-- That is your cue to press Enter to continue\n\n| 當您看到 'ANSWER:' 也就是R 的提示符 (>)\n| 時，或者當要求您從列表中選擇時，這也意味著您需要輸入Enter繼續。\n\nSelect 1, 2, or 3 and press Enter \n\n1: 繼續。\n2: 接著做.\n3: 讓我們保持前進!\n\nSelection: 1\n```\n\n## 介紹訊息\n\n```r\n| You can exit swirl and return to the R prompt (>) at any time by pressing the\n| Esc key. If you are already at the prompt, type bye() to exit and save your\n| progress. When you exit properly, you'll see a short message letting you know\n| you've done so.\n\n| 當你在R提示符時 (>):\n| -- 輸入 skip() 幫助你跳過當前的問題。\n| -- 輸入 play() 可以幫助你按自己的意願進行R的測試; swirl\n| 會忽略掉你在這部分做的嘗試...\n| -- 直到你輸入 nxt() ，它會幫助你重新得到swirl 的注意。\n| -- 輸入 bye() 會使swirl 退出。你的進度將會被儲存。\n| -- 輸入 main() 使你返回到 swirl 的主選單。\n| -- 輸入 info() 會再次顯示以上的資訊。\n\n| 讓我們開始吧!\n\n...\n```\n\n## 選擇課程\n\n```r\n| 請選擇一門課程，或輸入 0 退出 swirl。\n\n1: DataScienceAndR\n2: 帶我去 swirl 課程庫！\n\nSelection: 1\n```\n\n## 選擇課程\n\n```r\n| 請選擇一節課，或輸入 0 回到課程目錄。\n\n 1: 00-Hello-DataScienceAndR\n 2: 01-RBasic-01-Introduction\n 3: 01-RBasic-02-Data-Structure-Vectors\n 4: 01-RBasic-03-Data-Structure-Object\n 5: 01-RBasic-04-Factors\n...\n\nSelection: 1\n```\n\n## 請跟著老師示範，完成課程\n\n```r\nYour status has beed updated to tracking server\n  |                                                            |   0%\n (step: 1/13)\n\n| 讀到這段中文字的同學，請直接輸入enter進入課程。 If you are windows user and\n| you cannot read the chinese characters, please press `ESC` to exit swirl and\n| execute the command `Sys.setlocale(locale = \"cht\")`.\n\n```\n\n## 本週作業\n### 請同學完成R語言翻轉系統以下章節：\n- `01-RBasic-01-Introduction`\n- `01-RBasic-02-Data-Structure-Vectors`\n- `01-RBasic-03-Data-Structure-Object`\n- `01-RBasic-04-Factors`\n- `01-RBasic-05-Arrays-Matrices`\n- `01-RBasic-06-List-DataFrame`\n\n",
    "created" : 1496429053014.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2652983986",
    "id" : "BC8DDEAE",
    "lastKnownWriteTime" : 1496432259,
    "last_content_update" : 1496432259460,
    "path" : "/Volumes/SanDisk 2/DSP/Project/2017Q2  Pixnet企業內訓/course/PIXNET-Data-Science-Workshop/RBasic.Rmd",
    "project_path" : "RBasic.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}